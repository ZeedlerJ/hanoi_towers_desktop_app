classDiagram
    class App {
        +static void main(String[] args)
    }

    class MyGraphics {
        - JPanel mainPanel
        - int elapsedSeconds
        - int difficulty
        - int moveCount
        - int screen
        - Disk[] inferiorDisk
        - JLabel timerLabel
        - List<Disk> disks
        - Color[] diskColor
        - Timer gameTimer
        - Tower[] towers
        + MyGraphics()
        - setFullScreen()
        - paintCloseBtn()
        - paintBackBtn()
        - paintTopPanel()
        - removeGameComponents()
        - repaintScreen(Disk)
        - displayStartScreen()
        - displayDifficultySelectionScreen()
        - displayGameScreen(int)
        - startTimer()
        - stopTimer()
        - incrementMoves()
        - checkWinCondition()
        - displayWinScreen()
        + int totalDisk()
        + Disk diskByDiameter(int)
        + Disk inferiorDiskOf(Disk)
        + int indexOfInferiorDiskOf(Disk)
        + int indexOfDisk(Disk)
    }

    class Tower {
        - Disk topDisk
        - Color bgColor
        - int towerDepth
        - int towerDiameter
        - int towerHeight
        - MyGraphics frame
        + Tower(Color, int, int, int, int, MyGraphics)
        + void paintComponent(Graphics)
        + boolean contains(int, int)
        + void topDisk(Disk)
        + Disk topDisk()
        + boolean isCompleteTower(int)
    }

    class Disk {
        - boolean isTop
        - Color color
        - int diskDepth
        - int diskDiameter
        - int diskHeight
        - MyGraphics frame
        - Shape clickableShape
        - int mouseX
        - int mouseY
        - int towerIndex
        + Disk(Color, int, int, MyGraphics)
        + void paintComponent(Graphics)
        + void relocateDisk(int, int)
        + boolean contains(int, int)
        + int diskDepth()
        + void isTop(boolean)
        + boolean isTop()
        + int diskDiameter()
        + int mouseX()
        + void mouseX(int)
        + int mouseY()
        + void mouseY(int)
        + int towerIndex()
        + void towerIndex(int)
    }

    class RoundedBtn {
        - int R
        - boolean isCircular
        + RoundedBtn(String, int, int, int, Color, Color)
        + void paintComponent(Graphics)
        + boolean contains(int, int)
    }

    %% Herencias %%
    MyGraphics --|> JFrame
    Tower --|> JPanel
    Disk --|> JPanel
    RoundedBtn --|> JButton

    %% Asociaciones %%
    App --> MyGraphics
    MyGraphics o-- Tower       : towers
    MyGraphics o-- Disk        : disks, inferiorDisk
    Tower --> Disk             : topDisk
    Tower --> MyGraphics       : frame
    Disk --> MyGraphics        : frame
